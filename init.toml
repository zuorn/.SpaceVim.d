#=============================================================================
#=============================================================================
#                            spacevim 配置 
#                      快速打开配置文件快捷键：Spc f v d 
#=============================================================================
#=============================================================================

#============================= [选项] 配置 ================================================
[options]

    # 主题
    # colorscheme = "gruvbox"
    colorscheme = "one"
    colorscheme_bg = "dark"


    # 启用/禁用终端真色，在目前大多数终端下都是支持真色的，当然也有
    # 一小部分终端不支持真色，如果你的 SpaceVim 颜色看上去比较怪异
    # 可以禁用终端真色，将下面的值设为 false
    enable_guicolors = true

    # 状态栏分割符
    statusline_separator = "fire"
    statusline_inactive_separator = "arrow"
    buffer_index_type = 4
    enable_tabline_filetype_icon = true
    enable_statusline_mode = false

    # 中文帮助文档
    vim_help_language = "cn"
    # 字体设置
    guifont = "Hack Nerd Font:h14"


# 函数
    # 函数 bootstrap_before 将在读取用户配置后执行，而函数 bootstrap_after 将在 VimEnter autocmd 之后执行。
    bootstrap_before = "myspacevim#before"
    bootstrap_after  = "myspacevim#after"




#============================= [插件] 配置 ================================================

# Enable autocomplete layer
[[layers]]
name = 'autocomplete'

# shell
[[layers]]
name = 'shell'
default_position = 'float'
default_height = 50

[[layers]]
  name = "colorscheme"

# chinese mode
[[layers]]
  name = "chinese"

# tmux
# Ctrl + hjkl 切换窗格
[[layers]]
  name = "tmux"

# toml 语法高亮
[[layers]]
  name = "lang#toml"

# # vim 语法高亮
# [[layers]]
  name = "lang#vim"

# markdown
# 浏览器实时预览： SPC l p
[[layers]]
  name = "lang#markdown"


# shell 语法检查
[[layers]]
  name = "lang#sh"

# dockerfile 语法高亮，如若需要语言服务器支持需要安装 ：npm install -g dockerfile-language-server-nodejs
[[layers]]
  name = "lang#dockerfile"


# git
[[layers]]
  name = "git"

#
# 版本控制
[[layers]]
  name = "VersionControl"

# fzf
[[layers]]
  name = "fzf"

#============================= python 开发环境 ================================================
# 快速运行: SPC l r

# ---->   交互式编程
# 启用后进程： SPC l s i
# 逐行发送： SPC l s l
# 选中区域发送： SPC l s s

#---->  安装 python 模块
[[layers]]
  name = "lang#python"

# ---->  语法检查：
# checkers 模块为 SpaceVim 提供了语法检查的功能，该模块默认已经载入。该模块默认使用 neomake 这一异步语法检查工具。对于 Python 的支持，是通过异步调用 flake8 命令，因此需安装，可通过 pip 命令来完成：
# pip install --user flake8

# python 代码格式化 需要安装依赖 yapf:
# pip install --user yapf
[[layers]]
  name = "format"


#---->   导入模块：
# 在编辑 Python 文件时，可以自动导入包、自动删除无用的包、排序格式化导包；需要安装 isort，可通过以下命令安装：
# pip install --user isort

# 调试
[[layers]]
   name = "debug"




#============================= 添加自定义插件 ================================================
#
# [[custom_plugins]]
# one_cmd 选项使得这个插件延迟加载。
# merged 选项用于设定是否合并该插件的文件夹，如果 merged 是 true，那么，这一插件内的文件将被合并到： ~/.cache/vimfiles/.cache/init.vim/ 或者 ~/.cache/vimfiles/.cache/vimrc/， 这依据当前使用的是 Neovim 还是 Vim。
# [[custom_plugins]]
    # repo = "neoclide/coc.nvim"
    # on_cmd = ["ColorHighlight", "ColorToggle"]
    # merged = false

# ranger 插件
# 使用说明：https://github.com/francoiscabrol/ranger.vim
    # repo = "francoiscabrol/ranger.vim"
    # on_cmd = ["ColorHighlight", "ColorToggle"]
    # merged = false


# Vimwiki 是 Vim 中的个人 Wiki —— 一组链接起来的、有独特语法高亮的文本文件。
# 使用方法：https://github.com/vimwiki/vimwiki/blob/master/README-cn.md
    # repo = "vimwiki/vimwiki"
    # on_cmd = ["ColorHighlight", "ColorToggle"]
    # merged = false

# 表格 vim-table-mode

  
